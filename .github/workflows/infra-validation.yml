name: Infrastructure Validation

on:
  push:
    branches:
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'
    paths:
      - 'Weather-dashboard-API/infra/**'
      - '.github/workflows/infra-validation.yml'

# Add environment variables for better configuration management
env:
  TF_VERSION: "1.8.5"
  AWS_REGION: "us-east-1"
  WORKING_DIR: "./Weather-dashboard-API/infra/environments/dev"
  INFRA_DIR: "./Weather-dashboard-API/infra"

jobs:
  validate-terraform:
    name: 'Validate Terraform (Feature Branch)'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    # Add timeout to prevent hanging builds
    timeout-minutes: 15

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: 'Terraform Init'
        run: terraform init
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Terraform Format'
        run: terraform fmt -check
        working-directory: ${{ env.INFRA_DIR }}

      - name: 'Terraform Validate'
        run: terraform validate
        working-directory: ${{ env.WORKING_DIR }}

      - name: 'Run Checkov Security Scan'
        uses: bridgecrewio/checkov-action@v12
        with:
            directory: ${{ env.INFRA_DIR }}
            framework: terraform
            skip_check: CKV_AWS_130,CKV_AWS_338,CKV_AWS_158,CKV_AWS_136,CKV_AWS_260,CKV_AWS_150,CKV_AWS_131,CKV_AWS_91,CKV2_AWS_20,CKV2_AWS_28,CKV_AWS_103,CKV_AWS_378,CKV_AWS_126,CKV_AWS_135,CKV_AWS_382,CKV_AWS_147,CKV_AWS_219,CKV_AWS_144,CKV2_AWS_61,CKV2_AWS_62,CKV2_AWS_6,CKV_AWS_18,CKV_AWS_145,CKV_AWS_316
      - name: Display Skipped Security Checks
        run: |
          echo "‚ÑπÔ∏è  The following Checkov security checks were intentionally skipped:"
          echo "   ‚Ä¢ CKV_AWS_130: Public subnets auto-assign public IPs (required for public subnets)"
          echo "   ‚Ä¢ CKV_AWS_338: CloudWatch log retention < 1 year (7 days is sufficient for dev/testing)"
          echo "   ‚Ä¢ CKV_AWS_158: Additional security check (deferred for this iteration)"
          echo "   ‚Ä¢ CKV_AWS_136: Askes the user to use KMS to encrypt ECR repositories"
          echo "   ‚Ä¢ CKV_AWS_260: ALB requires port 80 for HTTP to HTTPS redirection, which is a standard secure practice."
          echo "   ‚Ä¢ CKV_AWS_150: ALB requires to have enabled the deletion protection to avoid accidental deletion, which is a standard secure practice."
          echo "   ‚Ä¢ CKV_AWS_91: ALB requires to have access logs enabled"
          echo "   ‚Ä¢ CKV_AWS_131: ALB requires to have the logs enables"
          echo "   ‚Ä¢ CKV2_AWS_20: Ensure that ALB redirects HTTP requests into HTTPS ones"
          echo "   ‚Ä¢ CKV2_AWS_28: Ensure public facing ALB are protected by WA"
          echo "   ‚Ä¢ CKV_AWS_103: Ensure that load balancer is using at least TLS 1.2"
          echo "   ‚Ä¢ CKV_AWS_378: Ensure AWS Load Balancer doesnt use HTTP protocol"
          echo "   ‚Ä¢ CKV_AWS_126: Ensure that detailed monitoring is enabled for EC2 instances"
          echo "   ‚Ä¢ CKV_AWS_135: Ensure that EC2 is EBS optimized"
          echo "   ‚Ä¢ CKV_AWS_382: Ensure no security groups allow egress from 0.0.0.0:0 to port -1"
          echo "   ‚Ä¢ CKV_AWS_147: Ensure that CodeBuild projects are encrypted using CMK"
          echo "   ‚Ä¢ CKV_AWS_219: Ensure CodePipeline Artifact store is using a KMS CMK" 
          echo "   ‚Ä¢ CKV_AWS_144: Ensure that S3 bucket has cross-region replication enabled"
          echo "   ‚Ä¢ CKV2_AWS_61: Ensure that an S3 bucket has a lifecycle configuration"
          echo "   ‚Ä¢ CKV2_AWS_62: Ensure S3 buckets should have event notifications enabled"
          echo "   ‚Ä¢ CKV2_AWS_6: Ensure that S3 bucket has a Public Access block"
          echo "   ‚Ä¢ CKV_AWS_18: Ensure the S3 bucket has access logging enabled"
          echo "   ‚Ä¢ CKV_AWS_145: Ensure that S3 buckets are encrypted with KMS by default"
          echo "   ‚Ä¢ CKV_AWS_316: CodeBuild project security configuration (acceptable for CI/CD use case)"
         
      - name: Terraform Plan (Validation Only)
        id: plan-validation
        run: |
          echo "Starting Terraform plan for validation..."
          terraform plan -input=false -no-color
          echo "‚úÖ Terraform plan validation completed successfully"
        working-directory: ${{ env.WORKING_DIR }}
        env:
          TF_VAR_bastion_public_key: ${{ secrets.BASTION_PUBLIC_KEY }}
          TF_VAR_bastion_allowed_cidr_blocks: ${{ secrets.LOCAL_IP }}

      # Add success notification
      - name: 'Notify on Success'
        if: success()
        run: |
          echo "‚úÖ Infrastructure validation successful!"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Your changes are ready for a Pull Request to develop"

      # Add failure notification
      - name: 'Notify on Failure'
        if: failure()
        run: |
          echo "üö® Infrastructure validation failed!"
          echo "Please fix the following issues before creating a Pull Request:"
          echo "  ‚Ä¢ Terraform formatting errors"
          echo "  ‚Ä¢ Security policy violations"
          echo "  ‚Ä¢ Invalid Terraform configuration"
          exit 1
